THREE.OrbitControls=function(e,t){this.object=e;this.domElement=t!==undefined?t:document;this.enabled=true;this.center=new THREE.Vector3;this.userZoom=true;this.userZoomSpeed=1;this.userRotate=true;this.userRotateSpeed=1;this.userPan=true;this.userPanSpeed=2;this.autoRotate=false;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minDistance=0;this.maxDistance=Infinity;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40,ROTATE:65,ZOOM:83,PAN:68};var a=this;var n=1e-6;var r=1800;var o=new THREE.Vector2;var s=new THREE.Vector2;var i=new THREE.Vector2;var c=new THREE.Vector2;var l=new THREE.Vector2;var d=new THREE.Vector2;var u=0;var h=0;var f=1;var m=new THREE.Vector3;var E={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};var p=E.NONE;var v={type:"change"};this.rotateLeft=function(e){if(e===undefined){e=w()}h-=e};this.rotateRight=function(e){if(e===undefined){e=w()}h+=e};this.rotateUp=function(e){if(e===undefined){e=w()}u-=e};this.rotateDown=function(e){if(e===undefined){e=w()}u+=e};this.zoomIn=function(e){if(e===undefined){e=g()}f/=e};this.zoomOut=function(e){if(e===undefined){e=g()}f*=e};this.pan=function(e){e.transformDirection(this.object.matrix);e.multiplyScalar(a.userPanSpeed);this.object.position.add(e);this.center.add(e)};this.update=function(){var e=this.object.position;var t=e.clone().sub(this.center);var a=Math.atan2(t.x,t.z);var r=Math.atan2(Math.sqrt(t.x*t.x+t.z*t.z),t.y);if(this.autoRotate){this.rotateLeft(w())}a+=h;r+=u;r=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,r));r=Math.max(n,Math.min(Math.PI-n,r));var o=t.length()*f;o=Math.max(this.minDistance,Math.min(this.maxDistance,o));t.x=o*Math.sin(r)*Math.sin(a);t.y=o*Math.cos(r);t.z=o*Math.sin(r)*Math.cos(a);e.copy(this.center).add(t);this.object.lookAt(this.center);h=0;u=0;f=1;if(m.distanceTo(this.object.position)>0){this.dispatchEvent(v);m.copy(this.object.position)}};function w(){return 2*Math.PI/60/60*a.autoRotateSpeed}function g(){return Math.pow(.95,a.userZoomSpeed)}function M(e){if(a.enabled===false)return;if(a.userRotate===false)return;e.preventDefault();if(p===E.NONE){if(e.button===0)p=E.ROTATE;if(e.button===1)p=E.ZOOM;if(e.button===2)p=E.PAN}if(p===E.ROTATE){o.set(e.clientX,e.clientY)}else if(p===E.ZOOM){c.set(e.clientX,e.clientY)}else if(p===E.PAN){}document.addEventListener("mousemove",T,false);document.addEventListener("mouseup",R,false)}function T(e){if(a.enabled===false)return;e.preventDefault();if(p===E.ROTATE){s.set(e.clientX,e.clientY);i.subVectors(s,o);a.rotateLeft(2*Math.PI*i.x/r*a.userRotateSpeed);a.rotateUp(2*Math.PI*i.y/r*a.userRotateSpeed);o.copy(s)}else if(p===E.ZOOM){l.set(e.clientX,e.clientY);d.subVectors(l,c);if(d.y>0){a.zoomIn()}else{a.zoomOut()}c.copy(l)}else if(p===E.PAN){var t=e.movementX||e.mozMovementX||e.webkitMovementX||0;var n=e.movementY||e.mozMovementY||e.webkitMovementY||0;a.pan(new THREE.Vector3(-t,n,0))}}function R(e){if(a.enabled===false)return;if(a.userRotate===false)return;document.removeEventListener("mousemove",T,false);document.removeEventListener("mouseup",R,false);p=E.NONE}function y(e){if(a.enabled===false)return;if(a.userZoom===false)return;var t=0;if(e.wheelDelta){t=e.wheelDelta}else if(e.detail){t=-e.detail}if(t>0){a.zoomOut()}else{a.zoomIn()}}function b(e){if(a.enabled===false)return;if(a.userPan===false)return;switch(e.keyCode){case a.keys.ROTATE:p=E.ROTATE;break;case a.keys.ZOOM:p=E.ZOOM;break;case a.keys.PAN:p=E.PAN;break}}function x(e){switch(e.keyCode){case a.keys.ROTATE:case a.keys.ZOOM:case a.keys.PAN:p=E.NONE;break}}this.domElement.addEventListener("contextmenu",function(e){e.preventDefault()},false);this.domElement.addEventListener("mousedown",M,false);this.domElement.addEventListener("mousewheel",y,false);this.domElement.addEventListener("DOMMouseScroll",y,false);window.addEventListener("keydown",b,false);window.addEventListener("keyup",x,false)};THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype);"use strict";var ROOM_SIZE=20;var textures=["coke.jpg","coke2.jpg","coke3.jpg","diet-coke.jpg","drpepper.jpg","fanta.jpg","mountain-dew.png","pepsi.png","7-up.jpg","special.jpg"];var container;var controls;var renderer;var scene;var projector;var mouse={x:0,y:0,drag:false};var cursor=new THREE.Vector3;var labelMaterials=[];var labelsEnabled=[];var loadingCount;var camera;var floor;var intersectPlane;var platonicCan;var selectedCan;var cans=[];var canGeo;var topMat=new THREE.MeshPhongMaterial({map:new THREE.ImageUtils.loadTexture("textures/tops.png")});var floorTexture=new THREE.ImageUtils.loadTexture("textures/checkerboard.jpg");floorTexture.wrapS=floorTexture.wrapT=THREE.RepeatWrapping;floorTexture.repeat.set(20,20);var floorText=new THREE.MeshBasicMaterial({map:floorTexture});var floorUntext=new THREE.MeshBasicMaterial({color:8947848});var GUI={"Can rows":1,"Can max":36,Reset:function(){resetCans()},Shadows:true,"Popping cans":false,"Zero gravity":false,"Floor texture":true,Kaboom:function(){kaboom()}};window.onload=function(){var e=new dat.GUI;var t=e.addFolder("Physics");t.add(GUI,"Popping cans");t.add(GUI,"Zero gravity");t.add(GUI,"Kaboom");var a=e.addFolder("Soda types");for(var n=0;n<textures.length;n++){var r=textures[n];r=r.replace(/(.png|.jpg)/i,"");labelsEnabled[r]=true;GUI[r]=true;a.add(GUI,r).onChange(changeCansEnabled)}var o=e.addFolder("Rendering options");o.add(GUI,"Shadows").onChange(function(){renderer.shadowMapAutoUpdate=GUI["Shadows"];if(!GUI["Shadows"])renderer.clearTarget(light.shadowMap)});o.add(GUI,"Floor texture").onChange(function(){floor.material=GUI["Floor texture"]?floorText:floorUntext});e.add(GUI,"Can rows").min(1).max(10).step(1);e.add(GUI,"Can max").min(1).max(36).step(1);e.add(GUI,"Reset")};"use strict";function onMouseDown(e){e.preventDefault();mouse.x=e.clientX/window.innerWidth*2-1;mouse.y=-(e.clientY/window.innerHeight)*2+1;mousePick()}function onMouseUp(e){if(mouse.drag){mouse.drag=false;controls.enabled=true;var t=new THREE.Vector3(0,0,0);var a=new THREE.Vector3(1,1,1);if(GUI["Zero gravity"]){selectedCan.setAngularFactor(t);selectedCan.setAngularVelocity(a);selectedCan.setLinearFactor(t);selectedCan.setLinearVelocity(a)}else{selectedCan.setAngularFactor(a);selectedCan.setAngularVelocity(t);selectedCan.setLinearFactor(a);selectedCan.setLinearVelocity(t)}}}function onMouseMove(e){e.preventDefault();if(mouse.drag){mouse.x=e.clientX/window.innerWidth*2-1;mouse.y=-(e.clientY/window.innerHeight)*2+1;var t=new THREE.Vector3(mouse.x,mouse.y,1);projector.unprojectVector(t,camera);var a=new THREE.Raycaster(camera.position,t.sub(camera.position).normalize());var n=a.intersectObject(intersectPlane);var r=n[0].point;if(Math.abs(cursor.x-r.x)<.01&&Math.abs(cursor.y-r.y)<.01&&Math.abs(cursor.z-r.z)<.01){var o=new THREE.Vector3;selectedCan.setAngularFactor(o);selectedCan.setAngularVelocity(o);selectedCan.setLinearFactor(o);selectedCan.setLinearVelocity(o)}else{var s=new THREE.Vector3;s.copy(r).sub(selectedCan.position).multiplyScalar(5);selectedCan.setLinearVelocity(s)}cursor.copy(r)}}function mousePick(){var e=new THREE.Vector3(mouse.x,mouse.y,1);projector.unprojectVector(e,camera);var t=new THREE.Raycaster(camera.position,e.sub(camera.position).normalize());var a=t.intersectObjects(cans);if(a.length>0){selectedCan=a[0].object;if(GUI["Popping cans"]){selectedCan.setLinearVelocity(new THREE.Vector3(0,4,0));return}controls.enabled=false;mouse.drag=true;intersectPlane.position.copy(selectedCan.position);intersectPlane.lookAt(camera.position);var n=t.intersectObject(intersectPlane);cursor.copy(n[0].point);var r=new THREE.Vector3;selectedCan.setAngularFactor(r);selectedCan.setAngularVelocity(r);selectedCan.setLinearFactor(r);selectedCan.setLinearVelocity(r)}}"use strict";function loadTextures(e,t){if(e>=textures.length){t();return}var a=textures[e];var n=new THREE.ImageUtils.loadTexture("textures/"+a,{},function(){var a=new THREE.MeshPhongMaterial({map:n});var r=[a,topMat];var o=new THREE.MeshFaceMaterial(r);labelMaterials.push(o);loadingCount.innerHTML="["+labelMaterials.length+"/"+textures.length+"]";loadTextures(e+1,t)})}function loadCan(e,t){canGeo=e.clone();showPlatonicCan(e);loadingCount.innerHTML="[1/"+textures.length+"]";loadTextures(0,placeCans);render()}function showPlatonicCan(e){var t=document.createElement("canvas");var a=t.getContext("2d");a.font="Bold 40px serif";a.fillStyle="rgba(255,0,0,0.95)";a.fillRect(0,0,t.width,t.height);a.rotate(Math.PI/8);a.fillStyle="black";a.fillText("Platonic Can",20,50);var n=new THREE.Texture(t);n.needsUpdate=true;var r=new THREE.MeshPhongMaterial({map:n,side:THREE.DoubleSide});var o=new THREE.MeshPhongMaterial({color:11184810});var s=new THREE.MeshFaceMaterial([r,o]);platonicCan=new THREE.Mesh(e,s);platonicCan.castShadow=true;scene.add(platonicCan)}function kaboom(){for(var e=0;e<cans.length;e++){var t=cans[e];t.setLinearVelocity(new THREE.Vector3(Math.random()*10,Math.random()*10,Math.random()*10));t.setAngularVelocity(new THREE.Vector3(Math.random()*10,Math.random()*10,Math.random()*10))}}function resetCans(){for(var e=0;e<cans.length;e++){scene.remove(cans[e])}cans=[];placeCans()}function changeCansEnabled(e){labelsEnabled[this.property]=e}function placeCans(){var e=[];for(var t=GUI["Can rows"];t>0;t--){e.push(Math.ceil(Math.random()*GUI["Can max"]))}var a=[];for(var t=0;t<textures.length;t++){var n=textures[t].replace(/(.png|.jpg)/i,"");if(labelsEnabled[n])a.push(labelMaterials[t])}if(a.length==0)a.push(labelMaterials[0]);var r=canCoords(e);for(var o=0;o<r.length;o++){var s=r[o];var i=a[Math.floor(Math.random()*a.length)];for(var c=0;c<s.length;c++){var l=s[c];var d=new Physijs.BoxMesh(canGeo,new THREE.MeshPhongMaterial({color:16777215}));d.position.set(l.x,l.y,l.z);d.rotation.y=Math.random()*Math.PI*2;d.material=i;d.castShadow=true;cans.push(d)}}setTimeout(function(){document.getElementById("info").innerHTML=""},1e3);scene.remove(platonicCan);for(var t=0;t<cans.length;t++){scene.add(cans[t])}}function canCoords(e){var t=[];var a=0;e.forEach(function(e){t.push([]);var n=0;while(t[a].length<e){var r=0;var o=n;while(r<=n){t[a].push(new THREE.Vector3(a,r,o));r++;o--;if(t[a].length==e){break}}n++}a++});return t}"use strict";initScene();var light;function initScene(){scene=new Physijs.Scene;var e=window.innerWidth,t=window.innerHeight;var a=45,n=e/t,r=.1,o=2e4;camera=new THREE.PerspectiveCamera(a,n,r,o);scene.add(camera);camera.position.set(0,0,10);camera.lookAt(scene.position);renderer=new THREE.WebGLRenderer({antialias:true});renderer.setSize(e,t);container=document.createElement("container");document.body.appendChild(container);container.appendChild(renderer.domElement);controls=new THREE.OrbitControls(camera,renderer.domElement);document.addEventListener("mousedown",onMouseDown,false);document.addEventListener("mouseup",onMouseUp,false);document.addEventListener("mousemove",onMouseMove,false);projector=new THREE.Projector;renderer.shadowMapEnabled=GUI["Shadows"];loadingCount=document.getElementById("loadingCount");light=new THREE.SpotLight(14674943,3);light.position.multiplyScalar(1.3);light.position.set(-60,120,-30);light.castShadow=true;light.shadowMapWidth=4096;light.shadowMapHeight=4096;light.shadowDarkness=.2;scene.add(light);var s=new THREE.HemisphereLight(16777215,16777215,.3);s.position.set(0,10,0);scene.add(s);var i=new THREE.BoxGeometry(100,1,100);var c=GUI["Floor texture"]?floorText:floorUntext;floor=new Physijs.BoxMesh(i,c,0);floor.receiveShadow=true;floor.position.set(0,-1,0);scene.add(floor);intersectPlane=new THREE.Mesh(new THREE.PlaneGeometry(20,20,2,2),new THREE.MeshBasicMaterial({color:16711680,opacity:.25,transparent:true,wireframe:true}));intersectPlane.visible=false;scene.add(intersectPlane);var l=new THREE.JSONLoader;l.load("models/can.js",loadCan)}function render(){requestAnimationFrame(render);controls.update();scene.simulate();renderer.render(scene,camera)}